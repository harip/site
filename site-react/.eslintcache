[{"C:\\projects\\pers\\site\\site-react\\src\\index.js":"1","C:\\projects\\pers\\site\\site-react\\src\\Site.js":"2","C:\\projects\\pers\\site\\site-react\\src\\App.js":"3","C:\\projects\\pers\\site\\site-react\\src\\context\\ProfileContext.js":"4","C:\\projects\\pers\\site\\site-react\\src\\context\\UserContext.js":"5","C:\\projects\\pers\\site\\site-react\\src\\pthonds\\PythonDs.js":"6","C:\\projects\\pers\\site\\site-react\\src\\resume\\Resume.js":"7","C:\\projects\\pers\\site\\site-react\\src\\skills\\SkillCloud.js":"8","C:\\projects\\pers\\site\\site-react\\src\\projects\\Projects.js":"9","C:\\projects\\pers\\site\\site-react\\src\\blog\\Blog.js":"10","C:\\projects\\pers\\site\\site-react\\src\\common\\styling\\themes\\light.js":"11","C:\\projects\\pers\\site\\site-react\\src\\common\\styling\\themes\\dark.js":"12","C:\\projects\\pers\\site\\site-react\\src\\common\\components\\floatingactions\\FloatingActions.js":"13","C:\\projects\\pers\\site\\site-react\\src\\common\\components\\navbar\\NavBar.js":"14","C:\\projects\\pers\\site\\site-react\\src\\skills\\SkillSearch.js":"15","C:\\projects\\pers\\site\\site-react\\src\\blog\\BlogPosts.js":"16","C:\\projects\\pers\\site\\site-react\\src\\context\\BlogContext.js":"17","C:\\projects\\pers\\site\\site-react\\src\\projects\\useProjectStyles.js":"18","C:\\projects\\pers\\site\\site-react\\src\\common\\components\\experience\\Experience.js":"19","C:\\projects\\pers\\site\\site-react\\src\\common\\components\\floatingactions\\feedback-service.js":"20","C:\\projects\\pers\\site\\site-react\\src\\common\\components\\floatingactions\\Feedback.js":"21","C:\\projects\\pers\\site\\site-react\\src\\common\\components\\floatingactions\\resume-service.js":"22","C:\\projects\\pers\\site\\site-react\\src\\common\\components\\navbar\\SwipeableTemporaryDrawer.js":"23","C:\\projects\\pers\\site\\site-react\\src\\common\\components\\errordialog\\ErrorDialog.js":"24","C:\\projects\\pers\\site\\site-react\\src\\common\\components\\controls\\ThemeSwitcher.js":"25","C:\\projects\\pers\\site\\site-react\\src\\signin\\SignIn.js":"26","C:\\projects\\pers\\site\\site-react\\src\\common\\components\\contact\\Contact.js":"27","C:\\projects\\pers\\site\\site-react\\src\\blog\\useBlogStyles.js":"28","C:\\projects\\pers\\site\\site-react\\src\\apis\\axiosConfig.js":"29","C:\\projects\\pers\\site\\site-react\\src\\common\\components\\experience\\useExperienceStyles.js":"30","C:\\projects\\pers\\site\\site-react\\src\\common\\components\\controls\\SpinnerButton.js":"31","C:\\projects\\pers\\site\\site-react\\src\\signin\\SignInService.js":"32","C:\\projects\\pers\\site\\site-react\\src\\blog\\BlogPost.js":"33","C:\\projects\\pers\\site\\site-react\\src\\common\\components\\experience\\Project.js":"34","C:\\projects\\pers\\site\\site-react\\src\\blog\\skeletons\\SkeletonBlogPost.js":"35","C:\\projects\\pers\\site\\site-react\\src\\common\\components\\editor\\TextEditor.js":"36"},{"size":134,"mtime":1625873909886,"results":"37","hashOfConfig":"38"},{"size":478,"mtime":1625873909785,"results":"39","hashOfConfig":"38"},{"size":1567,"mtime":1625873909782,"results":"40","hashOfConfig":"38"},{"size":478,"mtime":1625873909868,"results":"41","hashOfConfig":"38"},{"size":1660,"mtime":1625873909871,"results":"42","hashOfConfig":"38"},{"size":301,"mtime":1625873909894,"results":"43","hashOfConfig":"38"},{"size":556,"mtime":1625873909898,"results":"44","hashOfConfig":"38"},{"size":2617,"mtime":1625873909907,"results":"45","hashOfConfig":"38"},{"size":2752,"mtime":1625873909889,"results":"46","hashOfConfig":"38"},{"size":411,"mtime":1625873909792,"results":"47","hashOfConfig":"38"},{"size":491,"mtime":1625873909862,"results":"48","hashOfConfig":"38"},{"size":892,"mtime":1625873909859,"results":"49","hashOfConfig":"38"},{"size":5189,"mtime":1625873909843,"results":"50","hashOfConfig":"38"},{"size":5630,"mtime":1625873909852,"results":"51","hashOfConfig":"38"},{"size":1411,"mtime":1625873909910,"results":"52","hashOfConfig":"38"},{"size":1820,"mtime":1625873909797,"results":"53","hashOfConfig":"38"},{"size":2637,"mtime":1625873909865,"results":"54","hashOfConfig":"38"},{"size":1218,"mtime":1625873909891,"results":"55","hashOfConfig":"38"},{"size":1839,"mtime":1625873909832,"results":"56","hashOfConfig":"38"},{"size":220,"mtime":1625873909846,"results":"57","hashOfConfig":"38"},{"size":1775,"mtime":1625873909840,"results":"58","hashOfConfig":"38"},{"size":995,"mtime":1625873909849,"results":"59","hashOfConfig":"38"},{"size":4074,"mtime":1625873909855,"results":"60","hashOfConfig":"38"},{"size":1342,"mtime":1625873909828,"results":"61","hashOfConfig":"38"},{"size":850,"mtime":1625873909815,"results":"62","hashOfConfig":"38"},{"size":4490,"mtime":1625873909901,"results":"63","hashOfConfig":"38"},{"size":4382,"mtime":1625873909808,"results":"64","hashOfConfig":"38"},{"size":983,"mtime":1625873909803,"results":"65","hashOfConfig":"38"},{"size":129,"mtime":1625873909789,"results":"66","hashOfConfig":"38"},{"size":700,"mtime":1625873909837,"results":"67","hashOfConfig":"38"},{"size":1477,"mtime":1625873909812,"results":"68","hashOfConfig":"38"},{"size":228,"mtime":1625873909904,"results":"69","hashOfConfig":"38"},{"size":7365,"mtime":1625873909795,"results":"70","hashOfConfig":"38"},{"size":672,"mtime":1625873909835,"results":"71","hashOfConfig":"38"},{"size":2576,"mtime":1625873909800,"results":"72","hashOfConfig":"38"},{"size":1239,"mtime":1625873909817,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wszz6m",{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\projects\\pers\\site\\site-react\\src\\index.js",[],"C:\\projects\\pers\\site\\site-react\\src\\Site.js",[],"C:\\projects\\pers\\site\\site-react\\src\\App.js",[],"C:\\projects\\pers\\site\\site-react\\src\\context\\ProfileContext.js",[],"C:\\projects\\pers\\site\\site-react\\src\\context\\UserContext.js",["153"],"import React, { useEffect, useState } from 'react'; \r\n\r\nconst defaultProviderValue = {\r\n  user: 'Guest',\r\n  token: localStorage.getItem('token'),\r\n  theme: 'light',\r\n  modifyNameAndToken: ()=> {},\r\n  isLoggedIn: ()=> {},\r\n  logout: ()=> {},\r\n  changeTheme: ()=>{}\r\n};\r\n\r\nconst UserContext = React.createContext(defaultProviderValue);\r\n\r\nexport const UserContextProvider = ({children}) => {\r\n  const [name, setName] = useState(defaultProviderValue);\r\n\r\n  useEffect(() => { \r\n    let token = localStorage.getItem('token');\r\n    token = token ? token : \"\";\r\n    \r\n    if (token !== \"\"){\r\n      modifyNameAndToken('admin',token);\r\n    }\r\n\r\n    // Check theme  \r\n    let theme = localStorage.getItem('theme');\r\n    theme = theme && theme !== ''? theme : 'light';\r\n    changeTheme(theme);\r\n  },[]); \r\n\r\n  const modifyNameAndToken = (user,token) => { \r\n    let newState = { ...name, \r\n      user: user,\r\n      token:  token\r\n    };\r\n    setName(newState); \r\n  };\r\n\r\n  const isLoggedIn = () => {\r\n    const isAdminAndLoggedIn =  \r\n      name.token  && \r\n      name.token !== \"null\"\r\n    return isAdminAndLoggedIn;\r\n  }\r\n\r\n  const logout = () => {\r\n    setName({ ...name, \r\n      user: 'Guest',\r\n      token:  ''\r\n    }); \r\n    localStorage.setItem('token',\"\");\r\n  }\r\n\r\n  const changeTheme = (themeName) => {  \r\n    setName({ ...name, \r\n      theme: `${themeName}`\r\n    }); \r\n    localStorage.setItem('theme',themeName);\r\n  } \r\n\r\n  return(\r\n    <UserContext.Provider value={{\r\n      ...name,\r\n      modifyNameAndToken,\r\n      isLoggedIn,\r\n      logout,\r\n      changeTheme\r\n    }}>\r\n      {children}\r\n    </UserContext.Provider> \r\n  );\r\n};\r\n\r\nexport default UserContext;","C:\\projects\\pers\\site\\site-react\\src\\pthonds\\PythonDs.js",[],"C:\\projects\\pers\\site\\site-react\\src\\resume\\Resume.js",[],"C:\\projects\\pers\\site\\site-react\\src\\skills\\SkillCloud.js",[],"C:\\projects\\pers\\site\\site-react\\src\\projects\\Projects.js",[],"C:\\projects\\pers\\site\\site-react\\src\\blog\\Blog.js",[],"C:\\projects\\pers\\site\\site-react\\src\\common\\styling\\themes\\light.js",[],"C:\\projects\\pers\\site\\site-react\\src\\common\\styling\\themes\\dark.js",["154","155"],"import { createMuiTheme, makeStyles, ThemeProvider } from '@material-ui/core/styles'; \r\n\r\nconst darkTheme = {\r\n  backgroundColor: \"#424242\", \r\n  boxShadowColor: \"#151414\"\r\n} \r\n\r\nconst dark = createMuiTheme({  \r\n  overrides: {  \r\n    MuiCssBaseline: {\r\n      \"@global\": {\r\n        body: {\r\n          backgroundColor: darkTheme.backgroundColor\r\n        }, \r\n        pre: { \r\n          backgroundColor: \"#101213 !important\", \r\n        }\r\n      }\r\n    },\r\n    MuiGrid: {\r\n      item: {\r\n        // Some CSS \r\n        boxShadow: '0px 6px 6px -3px #272424, 0px 10px 14px 1px #272424'\r\n      },\r\n    },\r\n    MuiListItem : {\r\n      selected : {\r\n        color: 'red'\r\n      }\r\n    }\r\n  }, \r\n  palette: { \r\n    type: 'dark', \r\n    customBackground: darkTheme.backgroundColor,\r\n    selectedMenuItem: 'red', \r\n    hamburgerColor: 'red',\r\n    contactHeaderColor: 'black'\r\n  }\r\n});\r\n\r\nexport default dark;","C:\\projects\\pers\\site\\site-react\\src\\common\\components\\floatingactions\\FloatingActions.js",["156"],"import React, { useState, useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload'; \r\nimport Hidden from '@material-ui/core/Hidden'; \r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\r\nimport getResume from './resume-service';\r\nimport onFeedbackSubmit from './feedback-service';\r\nimport Feedback from './Feedback';\r\nimport ErrorDialog from '../errordialog/ErrorDialog';  \r\nimport ThemeSwitcher from '../controls/ThemeSwitcher';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1), \r\n  },\r\n\r\n  fabFeedback: {\r\n    marginTop: 10,\r\n    position: 'fixed',  \r\n    bottom: theme.spacing(2),\r\n    zIndex: 999\r\n  },\r\n\r\n  fabResume: {\r\n    marginTop: 10,\r\n    position: 'fixed',    \r\n    bottom: theme.spacing(8),\r\n    zIndex: 999\r\n  },\r\n\r\n  fabItem: {\r\n    marginBottom: 10\r\n  },\r\n\r\n  fabTheme: { \r\n    position: 'fixed',    \r\n    right: theme.spacing(2),\r\n    bottom: theme.spacing(2),\r\n    marginLeft: 'auto' \r\n  },\r\n}));\r\n\r\nconst FloatingActions = () => {\r\n  const classes = useStyles(); \r\n  const [errorDialog, setErrorDialog] = useState({}); \r\n  const [toggleFeedbackForm, settoggleFeedbackForm] = useState(false); \r\n\r\n  /**\r\n   * Get resume and display in a tab\r\n   */\r\n  const showResume = async () => { \r\n    const success = await getResume(); \r\n    if (!success) {\r\n      // Getting resume failed - display dialog \r\n      openErrorDialogWindow({\r\n        description: \"Please retry again or visit the Resume tab on the top of the page.\",\r\n        title: \"Failed to retrieve Resume.\"\r\n      }); \r\n    }\r\n  }\r\n\r\n  /**\r\n   * Show a feedback form for user\r\n   */\r\n  const feedbackForm = async () => {\r\n    settoggleFeedbackForm(!toggleFeedbackForm);\r\n  }\r\n  \r\n  /**\r\n   * Close feedback form, save or not save is indicated by save parameter\r\n   * @param {*} save save or cancel feedback form\r\n   * @param {*} data feedback form data\r\n   */\r\n  const closeFeedbackForm = async (save,data) => {\r\n    if (!save){\r\n      settoggleFeedbackForm(false);\r\n      return;\r\n    }\r\n\r\n    // Save data  \r\n    settoggleFeedbackForm(false);\r\n\r\n    if (!data || data.comments === ''){\r\n      return;\r\n    }\r\n    await onFeedbackSubmit(data);\r\n  }\r\n\r\n  /**\r\n   * Show error dialog\r\n   * @param {*} errorData error data\r\n   */\r\n  const openErrorDialogWindow = (errorData) =>{\r\n    const dialogData = {\r\n      openError: true,\r\n      errorDialogData: errorData,\r\n      closeError: closeErrorDialogWindow\r\n    } \r\n    setErrorDialog(dialogData);\r\n  }\r\n\r\n  /**\r\n   * Close error dialog \r\n   */\r\n  const closeErrorDialogWindow = () =>{ \r\n    setErrorDialog({});\r\n  }  \r\n \r\n  return (\r\n    <React.Fragment>\r\n          <ErrorDialog \r\n            errorDialog= {errorDialog}/>\r\n\r\n          <Feedback \r\n            open={toggleFeedbackForm} \r\n            close = {closeFeedbackForm} />\r\n\r\n          {/* Not mobile  */}\r\n          <Hidden xsDown > \r\n            <div className={classes.fabResume}> \r\n              <div className={classes.fabItem}>\r\n                <Fab\r\n                  variant=\"extended\"\r\n                  size=\"small\"\r\n                  color=\"primary\"\r\n                  aria-label=\"add\" \r\n                  onClick = { ()=> showResume() }\r\n                >\r\n                  <CloudDownloadIcon className={classes.extendedIcon} />\r\n                  Resume\r\n                </Fab> \r\n              </div> \r\n            </div> \r\n\r\n            <div className={classes.fabFeedback}> \r\n              <div className={classes.fabItem}>\r\n                <Fab\r\n                  variant=\"extended\"\r\n                  size=\"small\"\r\n                  color=\"primary\"\r\n                  aria-label=\"add\" \r\n                  onClick = { ()=> feedbackForm() }\r\n                >\r\n                  <FeedbackIcon  /> \r\n                </Fab> \r\n              </div> \r\n            </div>    \r\n\r\n            <ThemeSwitcher/>                  \r\n          </Hidden>\r\n\r\n          {/* Mobile */}\r\n          <Hidden smUp> \r\n            <div className={classes.fabResume}> \r\n              <div className={classes.fabItem}>\r\n                <Fab\r\n                  variant=\"extended\"\r\n                  size=\"small\"\r\n                  color=\"primary\"\r\n                  aria-label=\"add\"  \r\n                  onClick = { ()=> showResume() }\r\n                >\r\n                  <PictureAsPdfIcon /> \r\n                </Fab> \r\n              </div> \r\n            </div> \r\n\r\n            <div className={classes.fabFeedback}> \r\n              <div className={classes.fabItem}>\r\n                <Fab\r\n                  variant=\"extended\"\r\n                  size=\"small\"\r\n                  color=\"primary\"\r\n                  aria-label=\"add\" \r\n                  onClick = { ()=> feedbackForm() }\r\n                >\r\n                  <FeedbackIcon /> \r\n                </Fab> \r\n              </div> \r\n            </div>            \r\n          </Hidden>   \r\n\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default FloatingActions;","C:\\projects\\pers\\site\\site-react\\src\\common\\components\\navbar\\NavBar.js",["157"],"\r\nimport React, { useState, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom'; \r\nimport { Tab, ThemeProvider, Typography } from '@material-ui/core';\r\nimport Tabs from '@material-ui/core/Tabs'; \r\nimport ContactMailIcon from '@material-ui/icons/ContactMail';\r\nimport FindInPage from '@material-ui/icons/FindInPage';\r\nimport AssignmentInd from '@material-ui/icons/AssignmentInd';\r\nimport DynamicFeedIcon from '@material-ui/icons/DynamicFeed'; \r\nimport { makeStyles } from '@material-ui/core/styles';  \r\nimport Contact from '../contact/Contact';\r\nimport Hidden from '@material-ui/core/Hidden'; \r\nimport SwipeableTemporaryDrawer from './SwipeableTemporaryDrawer';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport IconButton from '@material-ui/core/IconButton';  \r\nimport SubjectIcon from '@material-ui/icons/Subject';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport SignIn from '../../../signin/SignIn';\r\nimport UserContext from '../../../context/UserContext';\r\n\r\nconst useStyles = makeStyles((theme)=>  ({\r\n  initials: {\r\n    fontSize: 15\r\n  },\r\n  mobileMenuLoc: {\r\n    marginLeft: 'auto',\r\n    color: theme.palette.hamburgerColor\r\n  },\r\n  mobileMenu: {\r\n    fontSize: 45\r\n  },\r\n  selectedTab: {\r\n    borderBottom: '7px solid blue'\r\n  },\r\n  mobileDisplayMenu : {\r\n    margin: 'auto'\r\n  }\r\n}));\r\n\r\nconst NavBar = (props) => {\r\n  const userContextValue = useContext(UserContext);\r\n  const [openContact, setopenContact] = useState(false);\r\n  const history = useHistory();\r\n  const classes = useStyles();  \r\n  const [toggleMenu, settoggleMenu] = useState(false);\r\n  const [selTab, setSelTab] = useState(0);\r\n  const [showSignIn, setShowSignIn] = useState(false);\r\n  \r\n  const handleContactClose = () => {\r\n    setopenContact(false);\r\n  };\r\n\r\n  const handleSignInClose = () => {\r\n    setShowSignIn(false);\r\n  };\r\n \r\n  const menuText = () => { \r\n    if (selTab === 1) {\r\n      return 'Skills';\r\n    }\r\n    if (selTab === 2) {\r\n      return 'Resume';\r\n    }\r\n    if (selTab === 3) {\r\n      return 'Projects';\r\n    }\r\n    if (selTab === 4) {\r\n      return 'Blog';\r\n    } \r\n    return ''\r\n  }\r\n\r\n  const handleChange = (event,value) => { \r\n    setSelTab(value);\r\n    if (value === 0) {\r\n      setopenContact(true); \r\n      return;\r\n    }\r\n    if (value === 1) {\r\n      history.push('/');\r\n      return;\r\n    }\r\n\r\n    if (value === 2) {\r\n      history.push('/resume');\r\n      return;\r\n    }\r\n\r\n    if (value === 3) {\r\n      history.push('/projects');\r\n      return;\r\n    }\r\n\r\n    if (value === 4) {\r\n      history.push('/posts');\r\n      return;\r\n    }\r\n \r\n    if (value === 998) {\r\n      // Login screen\r\n      setShowSignIn(true);\r\n      return;\r\n    }\r\n\r\n    if (value === 999) {\r\n      // hide screen\r\n      userContextValue.logout();\r\n      return;\r\n    }\r\n\r\n    return (\r\n      <div>Coming soon!</div>\r\n    );\r\n  };\r\n \r\n  return ( \r\n    <div>\r\n      <Contact open={openContact} close={handleContactClose}/> \r\n      <SignIn open={showSignIn} close={handleSignInClose}/>\r\n      \r\n        <Tabs \r\n          value={0}\r\n          inkbarstyle={{background: 'blue'}}\r\n          indicatorColor=\"primary\"  \r\n        >\r\n          <Tab icon={<ContactMailIcon style={{ fontSize: 40 }}/>} className={classes.initials} label=\"HARI\" onClick={(e)=>handleChange(e,0)}/> \r\n\r\n          <Hidden only={['xs','sm']}> \r\n            <Tab \r\n              icon={<FindInPage />} \r\n              onClick={(e)=>handleChange(e,1)} \r\n              label=\"Skill Cloud\"\r\n              className={`${ selTab===1 ? classes.selectedTab : \"\"}`}\r\n            />\r\n\r\n            <Tab \r\n              icon={<AssignmentInd />} \r\n              onClick={(e)=>handleChange(e,2)} \r\n              label=\"Resume\"\r\n              className={`${ selTab===2 ? classes.selectedTab : \"\"}`}\r\n            /> \r\n\r\n            <Tab \r\n              icon={<DynamicFeedIcon />} \r\n              onClick={(e)=>handleChange(e,3)} \r\n              label=\"Projects\"\r\n              className={`${ selTab===3 ? classes.selectedTab : \"\"}`}\r\n            />  \r\n\r\n            <Tab \r\n              icon={<SubjectIcon />} \r\n              onClick={(e)=>handleChange(e,4)} \r\n              label=\"Blog\"\r\n              className={`${ selTab===4 ? classes.selectedTab : \"\"}`}\r\n            />     \r\n            {\r\n              !userContextValue.isLoggedIn()\r\n              ? \r\n                <Tab \r\n                  icon={<AccountCircleIcon />} \r\n                  onClick={(e)=>handleChange(e,998)}  \r\n                  style={{marginLeft: 'auto'}}\r\n                  className={`${ selTab===998 ? classes.selectedTab : \"\"}`}\r\n                />  \r\n              :\r\n                <Tab \r\n                  icon={<ExitToAppIcon />} \r\n                  onClick={(e)=>handleChange(e,999)}  \r\n                  style={{marginLeft: 'auto'}}\r\n                  className={`${ selTab===999 ? classes.selectedTab : \"\"}`}\r\n                />  \r\n            } \r\n          </Hidden>\r\n\r\n          <Hidden only={['md','lg','xl']}>    \r\n            <div className={classes.mobileDisplayMenu}>\r\n              <Typography variant=\"h6\">{menuText()}</Typography>\r\n            </div>\r\n            <IconButton className={classes.mobileMenuLoc} onClick={()=>settoggleMenu(!toggleMenu)}   >\r\n              <MenuIcon  className={classes.mobileMenu}/>\r\n            </IconButton> \r\n            <SwipeableTemporaryDrawer toggle={toggleMenu} setToggle={settoggleMenu} onHandleChange={handleChange}/>\r\n          </Hidden>           \r\n\r\n        </Tabs>   \r\n        \r\n        <hr/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;","C:\\projects\\pers\\site\\site-react\\src\\skills\\SkillSearch.js",[],"C:\\projects\\pers\\site\\site-react\\src\\blog\\BlogPosts.js",[],"C:\\projects\\pers\\site\\site-react\\src\\context\\BlogContext.js",["158"],"import React, { useEffect, useState, useContext } from 'react'; \r\nimport axiosConfig from '../apis/axiosConfig';\r\nimport UserContext from './UserContext';\r\n\r\nconst initialState = {\r\n  // Default empty function\r\n  posts: null,\r\n  error: false, \r\n  retry: ()=>{},\r\n  save: ()=>{},\r\n  addNewBlog: ()=>{},\r\n  saveComment: ()=>{} \r\n};\r\n\r\nconst BlogContext = React.createContext(initialState);\r\n\r\nexport const BlogProvider = ({children}) => {\r\n  const userContextValue = useContext(UserContext);\r\n  const [blogs, setBlogs] = useState(null);\r\n\r\n  useEffect(() => { \r\n    fetchBlogData(); \r\n  }, [])\r\n\r\n  async function fetchBlogData() { \r\n    let posts = null;\r\n    let error = false; \r\n    try {\r\n      let response = await axiosConfig.get('/post'); \r\n      posts=response.data; \r\n    } catch(err) {\r\n      error = true;\r\n    } \r\n\r\n    setBlogs({\r\n      posts,\r\n      error\r\n    });\r\n  }  \r\n\r\n  const save = async (id,blogData) => { \r\n    if (id){\r\n      blogData[\"_id\"] = id;\r\n    } \r\n\r\n    try {\r\n      await axiosConfig.put('/post',{\r\n        ...blogData,\r\n        token: userContextValue.token\r\n      });\r\n      \r\n      // Reset state\r\n      let { posts } = { ...blogs };  \r\n      let currentPostIndex = posts.findIndex(f=>f._id === `${id}`);\r\n      if (currentPostIndex>=0) {   \r\n        // Set content and titles\r\n        posts.splice(currentPostIndex,1,blogData);\r\n        setBlogs({\r\n          posts,\r\n          error: false\r\n        });\r\n      } \r\n\r\n      // Reset value \r\n      return true;\r\n    } catch (err) {\r\n      // Don't do anything\r\n      console.error(err);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  const addNewBlog = async (id,comment) => { \r\n    try {\r\n      // Create a empty item\r\n      const newItem = {  \r\n        title:'',\r\n        subTitle: '',\r\n        content: 'Enter text' \r\n      }; \r\n      let { posts } = { ...blogs };   \r\n      posts.unshift(newItem);\r\n      setBlogs({\r\n        posts,\r\n        error: false\r\n      });\r\n      return true;\r\n    } catch (err) {\r\n      // Don't do anything\r\n      console.error(err);\r\n      return false;\r\n    } \r\n  }\r\n\r\n  const saveComment = async (id,comment) => {\r\n    try {\r\n      const response = await axiosConfig.patch('/post',  comment );\r\n      return true;\r\n    } catch (err) {\r\n      // Don't do anything\r\n      console.error(err);\r\n      return false;\r\n    } \r\n  }\r\n\r\n  const retryFetchBlog = () =>  fetchBlogData(); \r\n\r\n  return (\r\n    <BlogContext.Provider value={{\r\n      ...blogs,\r\n      retry: retryFetchBlog,\r\n      addNewBlog,\r\n      save,\r\n      saveComment      \r\n    }} >\r\n      {children}\r\n    </BlogContext.Provider>\r\n  )\r\n};\r\n \r\nexport default BlogContext;","C:\\projects\\pers\\site\\site-react\\src\\projects\\useProjectStyles.js",[],"C:\\projects\\pers\\site\\site-react\\src\\common\\components\\experience\\Experience.js",["159"],"/**\r\n * Component that renders a work experience at a company\r\n * Child Component: Project that renders individual projects worked at the company\r\n */\r\nimport React from 'react'; \r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Project from './Project'; \r\nimport useExperienceStyles from './useExperienceStyles';\r\nimport { Button } from '@material-ui/core';\r\n \r\nconst Experience = (props) => {\r\n    const { experienceItem } = props;\r\n\r\n    const classes=useExperienceStyles();\r\n\r\n    const getProjects = () =>{\r\n      const projects = experienceItem.projects.map(p=>{\r\n        return <Project key={p.id} project= {p}/>\r\n      });   \r\n      return projects;\r\n    }\r\n\r\n    const expHeaderClass = `${classes.paperStyle} `\r\n    return (\r\n        <Grid container \r\n            direction=\"row\" \r\n            wrap=\"nowrap\"\r\n            className={classes.root}\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n        >  \r\n            <Grid item xs={12}  sm={7} > \r\n                <Paper className={expHeaderClass} elevation={10}>\r\n                    <div className={classes.header}>{experienceItem.companyHeader}</div>  \r\n                </Paper>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}  sm={7}> \r\n                <Paper className={classes.paperStyle}   >\r\n                    <div className={classes.contentSpacing}>{experienceItem.jobDescription}</div>    \r\n                    <br/>\r\n                </Paper>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}  sm={7}> \r\n                <Paper className={classes.paperStyle}   >\r\n                  <div className={classes.contentSpacing}>\r\n                    {getProjects()}\r\n                  </div>\r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Experience;","C:\\projects\\pers\\site\\site-react\\src\\common\\components\\floatingactions\\feedback-service.js",[],"C:\\projects\\pers\\site\\site-react\\src\\common\\components\\floatingactions\\Feedback.js",[],"C:\\projects\\pers\\site\\site-react\\src\\common\\components\\floatingactions\\resume-service.js",[],"C:\\projects\\pers\\site\\site-react\\src\\common\\components\\navbar\\SwipeableTemporaryDrawer.js",[],"C:\\projects\\pers\\site\\site-react\\src\\common\\components\\errordialog\\ErrorDialog.js",[],"C:\\projects\\pers\\site\\site-react\\src\\common\\components\\controls\\ThemeSwitcher.js",[],"C:\\projects\\pers\\site\\site-react\\src\\signin\\SignIn.js",[],"C:\\projects\\pers\\site\\site-react\\src\\common\\components\\contact\\Contact.js",[],"C:\\projects\\pers\\site\\site-react\\src\\blog\\useBlogStyles.js",[],"C:\\projects\\pers\\site\\site-react\\src\\apis\\axiosConfig.js",[],"C:\\projects\\pers\\site\\site-react\\src\\common\\components\\experience\\useExperienceStyles.js",[],"C:\\projects\\pers\\site\\site-react\\src\\common\\components\\controls\\SpinnerButton.js",["160"],"import React, {useState} from 'react';\r\nimport clsx from 'clsx';\r\nimport Button from '@material-ui/core/Button'; \r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { makeStyles } from '@material-ui/core'; \r\nimport { green } from '@material-ui/core/colors'; \r\n\r\nconst useStyles= makeStyles((theme)=>({\r\n  buttonProgress: {\r\n    color: green[500],\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    marginTop: -12,\r\n    marginLeft: -12,\r\n  },\r\n  buttonSuccess: {\r\n    backgroundColor: green[500],\r\n    '&:hover': {\r\n      backgroundColor: green[700],\r\n    },\r\n  },wrapper: {\r\n    margin: theme.spacing(1),\r\n    position: 'relative',\r\n  },\r\n}));\r\n\r\nconst SpinnerButton = ( {buttonProps} ) => {\r\n  const { text, onClick, loading } = buttonProps; \r\n  const [success, setSuccess] = useState(false);\r\n  const classes = useStyles(); \r\n  const buttonClassname = clsx({\r\n    [classes.buttonSuccess]: success,\r\n  });\r\n\r\n  const onButtonClick = () => { \r\n    // Parent has the functionality of onclick\r\n    onClick();\r\n  }\r\n\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <Button \r\n        color=\"primary\" \r\n        variant=\"contained\" \r\n        className={buttonClassname}\r\n        disabled={loading}\r\n        onClick={onButtonClick}>\r\n        {text}\r\n      </Button>\r\n      {\r\n        loading && \r\n        <CircularProgress size={24} className={classes.buttonProgress} />\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport  default SpinnerButton;","C:\\projects\\pers\\site\\site-react\\src\\signin\\SignInService.js",[],"C:\\projects\\pers\\site\\site-react\\src\\blog\\BlogPost.js",[],"C:\\projects\\pers\\site\\site-react\\src\\common\\components\\experience\\Project.js",[],"C:\\projects\\pers\\site\\site-react\\src\\blog\\skeletons\\SkeletonBlogPost.js",[],"C:\\projects\\pers\\site\\site-react\\src\\common\\components\\editor\\TextEditor.js",[],{"ruleId":"161","severity":1,"message":"162","line":30,"column":5,"nodeType":"163","endLine":30,"endColumn":7,"suggestions":"164"},{"ruleId":"165","severity":1,"message":"166","line":1,"column":26,"nodeType":"167","messageId":"168","endLine":1,"endColumn":36},{"ruleId":"165","severity":1,"message":"169","line":1,"column":38,"nodeType":"167","messageId":"168","endLine":1,"endColumn":51},{"ruleId":"165","severity":1,"message":"170","line":1,"column":27,"nodeType":"167","messageId":"168","endLine":1,"endColumn":37},{"ruleId":"165","severity":1,"message":"169","line":4,"column":15,"nodeType":"167","messageId":"168","endLine":4,"endColumn":28},{"ruleId":"165","severity":1,"message":"171","line":97,"column":13,"nodeType":"167","messageId":"168","endLine":97,"endColumn":21},{"ruleId":"165","severity":1,"message":"172","line":10,"column":10,"nodeType":"167","messageId":"168","endLine":10,"endColumn":16},{"ruleId":"165","severity":1,"message":"173","line":30,"column":19,"nodeType":"167","messageId":"168","endLine":30,"endColumn":29},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'changeTheme' and 'modifyNameAndToken'. Either include them or remove the dependency array.","ArrayExpression",["174"],"no-unused-vars","'makeStyles' is defined but never used.","Identifier","unusedVar","'ThemeProvider' is defined but never used.","'useContext' is defined but never used.","'response' is assigned a value but never used.","'Button' is defined but never used.","'setSuccess' is assigned a value but never used.",{"desc":"175","fix":"176"},"Update the dependencies array to be: [changeTheme, modifyNameAndToken]",{"range":"177","text":"178"},[788,790],"[changeTheme, modifyNameAndToken]"]